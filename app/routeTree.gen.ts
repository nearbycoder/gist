/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as AuthImport } from './routes/auth'
import { Route as DashboardImport } from './routes/_dashboard'
import { Route as DashboardIndexImport } from './routes/_dashboard/index'
import { Route as AuthRegisterImport } from './routes/auth/register'
import { Route as AuthLoginImport } from './routes/auth/login'
import { Route as DashboardSettingsImport } from './routes/_dashboard.settings'
import { Route as DashboardAdminImport } from './routes/_dashboard.admin'
import { Route as DashboardGistsIndexImport } from './routes/_dashboard/gists/index'
import { Route as GistsIdShareImport } from './routes/gists/$id.share'
import { Route as DashboardGistsNewImport } from './routes/_dashboard/gists/new'
import { Route as DashboardGistsIdIndexImport } from './routes/_dashboard/gists/$id/index'
import { Route as DashboardGistsIdEditImport } from './routes/_dashboard/gists/$id/edit'

// Create/Update Routes

const AuthRoute = AuthImport.update({
  id: '/auth',
  path: '/auth',
  getParentRoute: () => rootRoute,
} as any)

const DashboardRoute = DashboardImport.update({
  id: '/_dashboard',
  getParentRoute: () => rootRoute,
} as any)

const DashboardIndexRoute = DashboardIndexImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => DashboardRoute,
} as any)

const AuthRegisterRoute = AuthRegisterImport.update({
  id: '/register',
  path: '/register',
  getParentRoute: () => AuthRoute,
} as any)

const AuthLoginRoute = AuthLoginImport.update({
  id: '/login',
  path: '/login',
  getParentRoute: () => AuthRoute,
} as any)

const DashboardSettingsRoute = DashboardSettingsImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardAdminRoute = DashboardAdminImport.update({
  id: '/admin',
  path: '/admin',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGistsIndexRoute = DashboardGistsIndexImport.update({
  id: '/gists/',
  path: '/gists/',
  getParentRoute: () => DashboardRoute,
} as any)

const GistsIdShareRoute = GistsIdShareImport.update({
  id: '/gists/$id/share',
  path: '/gists/$id/share',
  getParentRoute: () => rootRoute,
} as any)

const DashboardGistsNewRoute = DashboardGistsNewImport.update({
  id: '/gists/new',
  path: '/gists/new',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGistsIdIndexRoute = DashboardGistsIdIndexImport.update({
  id: '/gists/$id/',
  path: '/gists/$id/',
  getParentRoute: () => DashboardRoute,
} as any)

const DashboardGistsIdEditRoute = DashboardGistsIdEditImport.update({
  id: '/gists/$id/edit',
  path: '/gists/$id/edit',
  getParentRoute: () => DashboardRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/_dashboard': {
      id: '/_dashboard'
      path: ''
      fullPath: ''
      preLoaderRoute: typeof DashboardImport
      parentRoute: typeof rootRoute
    }
    '/auth': {
      id: '/auth'
      path: '/auth'
      fullPath: '/auth'
      preLoaderRoute: typeof AuthImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/admin': {
      id: '/_dashboard/admin'
      path: '/admin'
      fullPath: '/admin'
      preLoaderRoute: typeof DashboardAdminImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/settings': {
      id: '/_dashboard/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof DashboardSettingsImport
      parentRoute: typeof DashboardImport
    }
    '/auth/login': {
      id: '/auth/login'
      path: '/login'
      fullPath: '/auth/login'
      preLoaderRoute: typeof AuthLoginImport
      parentRoute: typeof AuthImport
    }
    '/auth/register': {
      id: '/auth/register'
      path: '/register'
      fullPath: '/auth/register'
      preLoaderRoute: typeof AuthRegisterImport
      parentRoute: typeof AuthImport
    }
    '/_dashboard/': {
      id: '/_dashboard/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof DashboardIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/gists/new': {
      id: '/_dashboard/gists/new'
      path: '/gists/new'
      fullPath: '/gists/new'
      preLoaderRoute: typeof DashboardGistsNewImport
      parentRoute: typeof DashboardImport
    }
    '/gists/$id/share': {
      id: '/gists/$id/share'
      path: '/gists/$id/share'
      fullPath: '/gists/$id/share'
      preLoaderRoute: typeof GistsIdShareImport
      parentRoute: typeof rootRoute
    }
    '/_dashboard/gists/': {
      id: '/_dashboard/gists/'
      path: '/gists'
      fullPath: '/gists'
      preLoaderRoute: typeof DashboardGistsIndexImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/gists/$id/edit': {
      id: '/_dashboard/gists/$id/edit'
      path: '/gists/$id/edit'
      fullPath: '/gists/$id/edit'
      preLoaderRoute: typeof DashboardGistsIdEditImport
      parentRoute: typeof DashboardImport
    }
    '/_dashboard/gists/$id/': {
      id: '/_dashboard/gists/$id/'
      path: '/gists/$id'
      fullPath: '/gists/$id'
      preLoaderRoute: typeof DashboardGistsIdIndexImport
      parentRoute: typeof DashboardImport
    }
  }
}

// Create and export the route tree

interface DashboardRouteChildren {
  DashboardAdminRoute: typeof DashboardAdminRoute
  DashboardSettingsRoute: typeof DashboardSettingsRoute
  DashboardIndexRoute: typeof DashboardIndexRoute
  DashboardGistsNewRoute: typeof DashboardGistsNewRoute
  DashboardGistsIndexRoute: typeof DashboardGistsIndexRoute
  DashboardGistsIdEditRoute: typeof DashboardGistsIdEditRoute
  DashboardGistsIdIndexRoute: typeof DashboardGistsIdIndexRoute
}

const DashboardRouteChildren: DashboardRouteChildren = {
  DashboardAdminRoute: DashboardAdminRoute,
  DashboardSettingsRoute: DashboardSettingsRoute,
  DashboardIndexRoute: DashboardIndexRoute,
  DashboardGistsNewRoute: DashboardGistsNewRoute,
  DashboardGistsIndexRoute: DashboardGistsIndexRoute,
  DashboardGistsIdEditRoute: DashboardGistsIdEditRoute,
  DashboardGistsIdIndexRoute: DashboardGistsIdIndexRoute,
}

const DashboardRouteWithChildren = DashboardRoute._addFileChildren(
  DashboardRouteChildren,
)

interface AuthRouteChildren {
  AuthLoginRoute: typeof AuthLoginRoute
  AuthRegisterRoute: typeof AuthRegisterRoute
}

const AuthRouteChildren: AuthRouteChildren = {
  AuthLoginRoute: AuthLoginRoute,
  AuthRegisterRoute: AuthRegisterRoute,
}

const AuthRouteWithChildren = AuthRoute._addFileChildren(AuthRouteChildren)

export interface FileRoutesByFullPath {
  '': typeof DashboardRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/admin': typeof DashboardAdminRoute
  '/settings': typeof DashboardSettingsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexRoute
  '/gists/new': typeof DashboardGistsNewRoute
  '/gists/$id/share': typeof GistsIdShareRoute
  '/gists': typeof DashboardGistsIndexRoute
  '/gists/$id/edit': typeof DashboardGistsIdEditRoute
  '/gists/$id': typeof DashboardGistsIdIndexRoute
}

export interface FileRoutesByTo {
  '/auth': typeof AuthRouteWithChildren
  '/admin': typeof DashboardAdminRoute
  '/settings': typeof DashboardSettingsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/': typeof DashboardIndexRoute
  '/gists/new': typeof DashboardGistsNewRoute
  '/gists/$id/share': typeof GistsIdShareRoute
  '/gists': typeof DashboardGistsIndexRoute
  '/gists/$id/edit': typeof DashboardGistsIdEditRoute
  '/gists/$id': typeof DashboardGistsIdIndexRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/_dashboard': typeof DashboardRouteWithChildren
  '/auth': typeof AuthRouteWithChildren
  '/_dashboard/admin': typeof DashboardAdminRoute
  '/_dashboard/settings': typeof DashboardSettingsRoute
  '/auth/login': typeof AuthLoginRoute
  '/auth/register': typeof AuthRegisterRoute
  '/_dashboard/': typeof DashboardIndexRoute
  '/_dashboard/gists/new': typeof DashboardGistsNewRoute
  '/gists/$id/share': typeof GistsIdShareRoute
  '/_dashboard/gists/': typeof DashboardGistsIndexRoute
  '/_dashboard/gists/$id/edit': typeof DashboardGistsIdEditRoute
  '/_dashboard/gists/$id/': typeof DashboardGistsIdIndexRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | ''
    | '/auth'
    | '/admin'
    | '/settings'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/gists/new'
    | '/gists/$id/share'
    | '/gists'
    | '/gists/$id/edit'
    | '/gists/$id'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/auth'
    | '/admin'
    | '/settings'
    | '/auth/login'
    | '/auth/register'
    | '/'
    | '/gists/new'
    | '/gists/$id/share'
    | '/gists'
    | '/gists/$id/edit'
    | '/gists/$id'
  id:
    | '__root__'
    | '/_dashboard'
    | '/auth'
    | '/_dashboard/admin'
    | '/_dashboard/settings'
    | '/auth/login'
    | '/auth/register'
    | '/_dashboard/'
    | '/_dashboard/gists/new'
    | '/gists/$id/share'
    | '/_dashboard/gists/'
    | '/_dashboard/gists/$id/edit'
    | '/_dashboard/gists/$id/'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  DashboardRoute: typeof DashboardRouteWithChildren
  AuthRoute: typeof AuthRouteWithChildren
  GistsIdShareRoute: typeof GistsIdShareRoute
}

const rootRouteChildren: RootRouteChildren = {
  DashboardRoute: DashboardRouteWithChildren,
  AuthRoute: AuthRouteWithChildren,
  GistsIdShareRoute: GistsIdShareRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/_dashboard",
        "/auth",
        "/gists/$id/share"
      ]
    },
    "/_dashboard": {
      "filePath": "_dashboard.tsx",
      "children": [
        "/_dashboard/admin",
        "/_dashboard/settings",
        "/_dashboard/",
        "/_dashboard/gists/new",
        "/_dashboard/gists/",
        "/_dashboard/gists/$id/edit",
        "/_dashboard/gists/$id/"
      ]
    },
    "/auth": {
      "filePath": "auth.tsx",
      "children": [
        "/auth/login",
        "/auth/register"
      ]
    },
    "/_dashboard/admin": {
      "filePath": "_dashboard.admin.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/settings": {
      "filePath": "_dashboard.settings.tsx",
      "parent": "/_dashboard"
    },
    "/auth/login": {
      "filePath": "auth/login.tsx",
      "parent": "/auth"
    },
    "/auth/register": {
      "filePath": "auth/register.tsx",
      "parent": "/auth"
    },
    "/_dashboard/": {
      "filePath": "_dashboard/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/gists/new": {
      "filePath": "_dashboard/gists/new.tsx",
      "parent": "/_dashboard"
    },
    "/gists/$id/share": {
      "filePath": "gists/$id.share.tsx"
    },
    "/_dashboard/gists/": {
      "filePath": "_dashboard/gists/index.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/gists/$id/edit": {
      "filePath": "_dashboard/gists/$id/edit.tsx",
      "parent": "/_dashboard"
    },
    "/_dashboard/gists/$id/": {
      "filePath": "_dashboard/gists/$id/index.tsx",
      "parent": "/_dashboard"
    }
  }
}
ROUTE_MANIFEST_END */
